{
  "hash": "7cddb834fc774c9050593f270371e214",
  "result": {
    "markdown": "# Introduction\n\nThis book describes workflow that I've found to be efficient in making reproducible research reports using R with `Rmarkdown` and now `Quarto` in data analysis projects.  I start with a fairly complete case study of survival patterns of passengers on the _Titanic_ that exemplifies many of the methods presented in the book.  This is followed by chapters covering importing data, creating annotated analysis files, examining extent and patterns of missing data, and running descriptive statistics on them with goals of understanding the data and their quality and completeness.  Functions in the `Hmisc` package are used to annotate data frames and data tables with labels and units of measurement, show metadata/data dictionaries, and to produce tabular and graphical statistical summaries.  Efficient and clear methods of recoding variables are given.  Several examples of processing and manipulating data using the `data.table` package are given, including some non-trivial longitudinal data computations.  General principles of data analysis are briefly surveyed and some flexible bivariate and 3-variable analysis methods are presented with emphasis on staying close to the data while avoiding highly problematic categorization of continuous independent variables.  Examples of diagramming the flow of exclusion of observations from analysis, caching results, parallel processing, and simulation are presented.  In the process several useful report writing methods are exemplified, including program-controlled creation of multiple report tabs. [[Comments](https://hbiostat.org/comment.html)<br>[Change log](https://github.com/harrelfe/blogd/commits/master/content/post/rflow.qmd)]{.aside}\n\n## R Code Repositories Used in This Book\nThis report makes heavy use of the following R packages and Github repository:\n\n* [`Hmisc` package](https://hbiostat.org/R/Hmisc) which contains functions for importing data, data annotation, summary statistics, statistical graphics, advanced table making, etc.\n* [`data.table` package](https://www.rdocumentation.org/packages/data.table/versions/1.14.2) for data storage, retrieval, manipulation, munging, aggregation, merging, and reshaping\n* [`haven` package](https://haven.tidyverse.org) for importing datasets from statistical packages\n* [`ggplot2` package](https://ggplot2.tidyverse.org) for static graphics\n* [`consort` package](https://cran.r-project.org/web/packages/consort) for consort diagrams\n* [`plotly` package](https://plotly.com/r) for interactive graphics\n* [`consort` package](https://cran.r-project.org/web/packages/consort) for consort diagrams showing observation filtering\n* [`rms` package](https://hbiostat.org/R/rms) for statistical modeling, validation, and presentation\n* [`knitr` package](https://cran.r-project.org/web/packages/knitr) for running reproducible reports, and also providing `kable` and `kables` functions for simple html table printing\n* [`rscripts` Github repository](https://github.com/harrelfe/rscripts) with utility functions that are all loaded when `reptools.r` is loaded\n   + `addCap`, `printCap` for adding captions to a list of figures and for printing the list\n   + `addggLayers` for adding extended box plots and spike histograms to `ggplot2` plots, especially when run on the output of `meltData`\n   + `dataChk` for data checking\n   + `dataOverview` dataset overview\n   + `hashCheck` for checking if parent objects have changed so a slow analysis has to be re-run (i.e., talking control of caching)\n   + `htmlList` to easily print vectors in a named list using `kable`\n   + `htmlView`, `htmlViewx` for viewing data dictionaries/metadata in browser windows\n   + `kabl` to make it easy to use `kable` and `kables` for making html tables\n   + `maketabs` to automatically make multiple tabs in `Quarto` reports, each tab holding the output of one or more R command\n   + `makecolmarg` to print an object in the right margin in `Quarto` reports\n   + `makecnote` to print an object in a collapsible `Quarto` note\n   + `makecallout` a generic Quarto callout maker called by `makecolmarg`, `makecnote`\n   + `makecodechunk` \n   + `makemermaid` make Quarto `mermaid` diagrams with insertion of variable values\n   + `meltData` melt a data table according to a formula, with optional substitution of variable labels for variable names\n   + `rsHelp` for viewing helps files for functions in `rscripts`\n   + `scplot` for putting graphs in separate chunks with captions in TOC\n   + `seqFreq` for creating a factor variable with categories in descending order of sequential frequencies of conditions (as used in computing study exclusion counts)\n   + `vClus` for variable clustering\n   + `runifChanged` which uses `hashCheck` to automatically re-run an analysis if needed, otherwise to retrieve previous results efficiently\n* [`qreport` Github repository](https://github.com/harrelfe/qreport/tree/master) which has functions dedicated to randomized clinical trial reporting\n   + `aePlot` for making an interactive `plotly` dot chart of adverse event proportions by treatment\n\nAnother file in `rscripts` is `movStats.r` which defines the `movStats` function for computing summary statistics by moving overlapping windows of a continuous variable, or simply stratified by a categorical variable.\nThe `rscripts` `Github` functions are accessed by the `Hmisc` function `getRs`, e.g.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrequire(Hmisc)\ngetRs('reptools.r', put='source')\ngetRs('movStats.r', put='source')\n```\n:::\n\n   \nAll the available help files for functions in `rscripts` are at [hbiostat.org/R/rscripts](https://hbiostat.org/R/rscripts).  To view a help file for one of the functions in the `RStudio` `Viewer` pane use for example `rsHelp(movStats)` or `rsHelp(reptools)`.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}